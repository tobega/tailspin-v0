composer toInt
  <INT>
end toInt

templates run&{name:, benchmark:}
  templates measure
    @: 1;
    def startTime: $SYS::nanoCount;
    1..$ -> [$ -> benchmark] -> \(<=[]> 0! <> $(1)!\) -> \(<=0> @measure: 0;\) -> !VOID
    $@ -> #
    <=1>
      def endTime: $SYS::nanoCount;
      def runTime: ($endTime - $startTime) ~/ 1000;
      '$name;: iterations=1 runtime: $runTime;us
' -> !OUT::write
      @run: $@run + $runTime;
    <=0>
      'Benchmark failed with incorrect result
' -> !OUT::write
  end measure

  'Starting $name; benchmark ...
' -> !OUT::write
  @: 0;
  def specs: { iterations: $ARGS::length -> \(<1..> $ARGS(1) -> toInt ! <> 1!\),
               innerIterations: $ARGS::length -> \(<2..> $ARGS(2) -> toInt ! <> 1!\)
             };
  1..$specs.iterations::raw -> \($specs.innerIterations::raw -> measure -> !VOID\) -> !VOID
  '$name;: iterations=$specs.iterations; average: $:$@run ~/ $specs.iterations::raw;us total: $@run;us

' -> !OUT::write
end run

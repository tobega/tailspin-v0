include 'harness'

data pile <1..3>

// Tailspin doesn't have nulls, which the java and javascript implementations rely on
// So this is more Tailspin-like
templates towers
  @: {piles: pile´1:[[$..0:-1 -> $], [], []], moves: 0"1"};
  sink pushDisk&{pile:}
    <?($@towers.piles($pile) <[<..$>]>)> $@ ! // Actually throws, there is no $@
    <> ..|@towers.piles($pile): $;
  end pushDisk
  templates popDisk
    ^@towers.piles($; last) !
  end popDisk
  sink moveTopDisk&{to:}
    $ -> popDisk -> !pushDisk&{pile: $to}
    @towers.moves: $@towers.moves + 1"1";
  end moveTopDisk
  sink moveDisks
    def what: $;
    $.disks -> #
    <=1"1"> $what.from -> !moveTopDisk&{to: $what.to}
    <> def otherPile: pile´(6 - $what.from::raw - $what.to::raw);
      {disks: $ - 1"1", from: $what.from, to: $otherPile }  -> !moveDisks
      $what.from -> !moveTopDisk&{to: $what.to}
      {disks: $ - 1"1", from: $otherPile, to: $what.to }  -> !moveDisks
  end moveDisks
  {disks: 13"1", from: pile´1, to: pile´2} -> !moveDisks
  $@.moves !
end towers

templates runAndVerify
  13 -> towers -> #
  <=8191"1"> 1 !
  <> 0 !
end runAndVerify

1 -> harness/run&{name: 'Towers', benchmark:runAndVerify} -> !VOID

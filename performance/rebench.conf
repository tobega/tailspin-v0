# -*- mode: yaml -*-
# Config file for ReBench
standard_experiment: all
standard_data_file: 'benchmark.data'

statistics:
    confidence_level: 0.95

runs:
    number_of_data_points: 10

quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

are_we_fast_yet:
    ## this is ignored by rebench
    iteration_numbers:
        fast_vm:      &FAST_VM      3000
        slow_vm:      &SLOW_VM      250
        very_slow_vm: &VERY_SLOW_VM 100

# definition of benchmark suites
benchmark_suites:
    steady-java:
        gauge_adapter: RebenchLog
        command: " -cp ../benchmarks/Java/benchmarks.jar Harness %(benchmark)s %(variable)s "
        variable_values: *FAST_VM ## the number iterations measured
        max_runtime: 6000
        benchmarks: &BENCHMARKS
#            - DeltaBlue:
#                extra_args: 12000
#            - Richards:
#                extra_args: 100
            - Json:
                extra_args: 10 # Should be 100
#            - CD:
#                extra_args: 250
#            - Havlak:
#                extra_args: 1500

#            - Bounce:
#                extra_args: 1500
            - List:
                extra_args: 15 # Should be 1500
#            - Mandelbrot:
#                extra_args: 500
#            - NBody:
#                extra_args: 250000
            - Permute:
                extra_args: 100 # Should be 1000
#            - Queens:
#                extra_args: 1000
            - Sieve:
                extra_args: 1000 # Should be 3000
#            - Storage:
#                extra_args: 1000
#            - Towers:
#                extra_args: 600

    steady-js:
        gauge_adapter: RebenchLog
        location: benchmarks/JavaScript
        command: "harness.js %(benchmark)s %(variable)s "
        variable_values: *FAST_VM ## the number iterations measured
        max_runtime: 6000
        benchmarks: *BENCHMARKS

    steady-tailspin:
        gauge_adapter: RebenchLog
        location: benchmarks/Tailspin
        command: "%(benchmark)s.tt %(variable)s "
        variable_values: *VERY_SLOW_VM ## the number iterations measured
        max_runtime: 6000
        benchmarks: *BENCHMARKS


# VMs have a name and are specified by a path and the binary to be executed
virtual_machines:
    # JVMs
    Java:
        path: implementations/
        binary: java.sh

    # JavaScript VMs
    Node:
        path: implementations/
        binary: node.sh
    Tailspin:
        path: implementations/
        binary: tailspin.sh

experiments:
    steady-java:
        description: Measure steady state performance
        benchmark: steady-java
        executions:
            - Java
    steady-js:
        benchmark: steady-js
        executions:
            - Node
    steady-tailspin:
      benchmark: steady-tailspin
      executions:
            - Tailspin

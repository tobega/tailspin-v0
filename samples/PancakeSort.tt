// https://www.reddit.com/r/dailyprogrammer/comments/np3sio/20210531_challenge_392_intermediate_pancake_sort/
// Simplest pancake sort

templates pancakeSort
  @: {stack: $, flips: 0};
  sink flip
    when <2..> do
      @pancakeSort.stack(1..$): $@pancakeSort.stack($..1:-1)...;
      '$@pancakeSort.stack;$#10;' -> !OUT::write
      @pancakeSort.flips: $@pancakeSort.flips + 1;
  end flip
  sink fixTop
    @: 1;
    2..$ -> #
    $ -> \(when <~=$@fixTop> do $@fixTop -> !flip $ -> !flip \) -> !VOID
    when <?($@pancakeSort.stack($) <$@pancakeSort.stack($@)..>)> do @: $;
  end fixTop
  $::length..2:-1 -> !fixTop
  $@ !
end pancakeSort

composer toInt
  <INT>
end toInt

[23, 72, 40, 43, 91, 38, 23, 58, 26, 59, 12, 18, 27, 39, 69, 74, 11, 41, 3, 40] -> pancakeSort -> !OUT::write

def x: ['a', 'b', 'c'];
def y: ['A', 'B', 'C'];
def z: [1, 2, 3];

1..$x::length -> '$x($);$y($);$z($);
' -> !OUT::write

templates transpose
  def a: $;
  def n: $(1)::length;
  [ 1..$n -> $a(1..-1; $) ] !
end transpose

[$x, $y, $z] -> transpose... -> '$...;
' -> !OUT::write

def u: ['a', 'b'];
def v: ['A', 'B', 'C'];
def w: [1];

templates transpose2
  @: [];
  $... -> [i](
    <?($i <..$@transpose2::length>)> ..|@transpose2($i): $;
    <> ..|@transpose2: [$];) -> !VOID
  $@ !
end transpose2

[$x, $y, $z] -> transpose2... -> '$...;
' -> !OUT::write

[$u,$v,$w] -> transpose2... -> '$...;
' -> !OUT::write


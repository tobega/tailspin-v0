templates permutations
  when <=1> do [1] !
  otherwise
    def n: $;
    templates expand
      def p: $;
      1..$n -> \(def k: $;
        [$p(1..$k-1)..., $n, $p($k..last)...] !\) !
    end expand
    $n - 1 -> permutations -> expand !
end permutations

def alpha: ['ABCD'...];
[ $alpha::length -> permutations -> '$alpha($)...;' ] -> !OUT::write
'

' -> !OUT::write

templates lexicalPermutations
  when <=1> do [1] !
  otherwise
    def n: $;
    def p: [ $n - 1 -> lexicalPermutations ];
    1..$n -> \(def k: $;
      def tail: [1..$n -> \(when <~=$k> do $ !\)];
      $p... -> [ $k, $tail($)...] !\) !
end lexicalPermutations

[ $alpha::length -> lexicalPermutations -> '$alpha($)...;' ] -> !OUT::write
